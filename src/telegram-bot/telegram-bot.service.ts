import { Injectable, Logger, OnModuleInit } from '@nestjs/common';
import { ConfigService } from '@nestjs/config';
import * as TelegramBot from 'node-telegram-bot-api';

const testProduct = {
  price: {
    regular: 4470,
    discount: 2235,
    old: 4470,
    actual: 2235,
  },
  itemId: '19000169265',
  mainVariantItemId: '19000169265',
  name: 'Heartleaf calming 2 Step set',
  productType: '–ù–∞–±–æ—Ä –¥–ª—è —É—Ö–æ–¥–∞ –∑–∞ –∫–æ–∂–µ–π –ª–∏—Ü–∞',
  type: 'Product',
  brand: 'ABIB',
  imageUrls: [
    'https://pcdn.goldapple.ru/p/p/19000169265/web/696d674d61696e8db8c1b35d4ee13mobile.jpg',
    'https://pcdn.goldapple.ru/p/p/19000169265/web/696d67416464318db8c1b38d2d052mobile.jpg',
    'https://pcdn.goldapple.ru/p/p/19000169265/web/696d67416464328db8c1b3bb8872emobile.jpg',
    'https://pcdn.goldapple.ru/p/p/19000169265/web/696d67416464338db8c1b3ef05a4dmobile.jpg',
  ],

  url: 'https://goldapple.ru/19000169265-heartleaf-calming-2-step-set',
  configurable: false,
  needOnlineConsultation: false,
  reviews: {
    rating: 5,
    reviewsCount: 1,
  },
};
const content =
  '–ù–µ –æ—Å–æ–±–æ —Ö–æ—á–µ—Ç—Å—è –∂–∏—Ç—å —Å–∫—Ä–æ–º–Ω–æ, –∫–æ–≥–¥–∞ —Å—É—â–µ—Å—Ç–≤—É—é—Ç Cl√© de Peau Beaut√©, PAYOT, Guinot, URIAGE. –ö—Å—Ç–∞—Ç–∏ –∏–º–µ–Ω–Ω–æ –∏—Ö (–∏ –¥—Ä—É–≥–∏–µ –±—Ä–∏–ª–ª–∏–∞–Ω—Ç—ã) Flacon Magazine —Å–ª–æ–∂–∏–ª –≤ –∫–æ—Å–º–µ—Ç–∏—á–∫—É F X EGOISTKA. –¢–µ—Å—Ç–∏—Ç–µ –ª—é–∫—Å–æ–≤—ã–µ –±–∞–Ω–∫–∏ –∏ –¥–∞–∂–µ –Ω–µ –¥—É–º–∞–π—Ç–µ –ø–æ–Ω–∏–∂–∞—Ç—å –±—å—é—Ç–∏-–ø–ª–∞–Ω–∫—É! <br><br>\n\n–ö–æ—Å–º–µ—Ç–∏—á–∫–∞ —Å –∞–ª—é–º–∏–Ω–∏–µ–≤—ã–º —Ñ–µ—Ä–º—É–∞—Ä–æ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –∏–∑ –ø–æ–ª–∏—ç—Å—Ç–µ—Ä–∞ –∏ —Å–∏–Ω—Ç–µ–ø–æ–Ω–∞.<br> \n–†–∞–∑–º–µ—Ä—ã: 21 —Å–º —Ö 28 —Å–º —Ö 11 —Å–º.<br><br>\n\n–ß—Ç–æ –≤–Ω—É—Ç—Ä–∏?<br>\n1. PAYOT, —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –∫—Ä–µ–º –¥–ª—è –ª–∏—Ü–∞ —Å —ç—Ñ–∏—Ä–Ω—ã–º –º–∞—Å–ª–æ–º –ª–∞–≤–∞–Ω–¥—ã, –º–∏–Ω–∏–∞—Ç—é—Ä–∞, 15 –º–ª. <br><br>\n\n2. Cl√© de Peau Beaut√©, –∂–∏–¥–∫–∞—è –ø–æ–º–∞–¥–∞ —Å —ç—Ñ—Ñ–µ–∫—Ç–æ–º –º–∞—Ç–æ–≤–æ–≥–æ –ø–æ–∫—Ä—ã—Ç–∏—è, 102/104/106, –ø–æ–ª–Ω–æ—Ä–∞–∑–º–µ—Ä–Ω–∞—è, 8 –º–ª.<br>\n–ü–æ–ø–∞–¥–∞–µ—Ç—Å—è –æ–¥–∏–Ω –∏–∑ –æ—Ç—Ç–µ–Ω–∫–æ–≤: 102, 104, 106.<br><br>\n\n3. HFC, –ø–∞—Ä—Ñ—é–º–µ—Ä–Ω–∞—è –≤–æ–¥–∞ Voodoo Chic, –º–∏–Ω–∏–∞—Ç—é—Ä–∞, 7,5 –º–ª. <br>\n4. Guinot, –≥–µ–ª—å –ø—Ä–æ—Ç–∏–≤ –≤–æ—Å–ø–∞–ª–µ–Ω–∏–π —Å –∫–æ–º–ø–ª–µ–∫—Å–æ–º AcniClear, –º–∏–Ω–∏–∞—Ç—é—Ä–∞, 3 –º–ª.<br>\n5. Clarins, –±–ª–µ—Å–∫ –¥–ª—è –≥—É–± Natural Lip Perfector, –æ—Ç—Ç–µ–Ω–æ–∫ 01 rose shimmer, –º–∏–Ω–∏–∞—Ç—é—Ä–∞, 5 –º–ª.<br>\n6. BELIF, —É–≤–ª–∞–∂–Ω—è—é—â–∏–π –∫—Ä–µ–º-–≥–µ–ª—å –¥–ª—è –Ω–æ—Ä–º–∞–ª—å–Ω–æ–π –∏ –∂–∏—Ä–Ω–æ–π –∫–æ–∂–∏, –º–∏–Ω–∏–∞—Ç—é—Ä–∞, 10 –º–ª. <br>\n7. Latte Beauty, —Ç—É—à—å –¥–ª—è —Ä–µ—Å–Ω–∏—Ü —Å —ç—Ñ—Ñ–µ–∫—Ç–æ–º –æ–±—ä–µ–º–∞, black, –ø–æ–ª–Ω–æ—Ä–∞–∑–º–µ—Ä–Ω–∞—è, 12 –º–ª. <br>\n8. ESSENTIAL PARFUMS PARIS, –ø–∞—Ä—Ñ—é–º–µ—Ä–Ω–∞—è –≤–æ–¥–∞ FIG INFUSION by Nathalie Lorson, —Å–µ–º–ø–ª, 2 –º–ª. <br>\n9. Make Up For Ever, —Ç–æ–Ω–∞–ª—å–Ω–æ–µ —Å—Ä–µ–¥—Å—Ç–≤–æ HD SKIN MATTE VELVET, 1N06, –º–∏–Ω–∏–∞—Ç—é—Ä–∞, 2 –≥.<br>\n10. Zeitun, –ø–∏—Ç–∞—Ç–µ–ª—å–Ω—ã–π –∫—Ä–µ–º –¥–ª—è —Ç–µ–ª–∞ —Å –∫–∞—Ä–∏—Ç–µ –∏ —Å–ª–∞–¥–∫–∏–º –º–∏–Ω–¥–∞–ª–µ–º, –ø–æ–ª–Ω–æ—Ä–∞–∑–º–µ—Ä–Ω—ã–π, 200 –º–ª. <br>\n11. SA.AL&CO, —É–≤–ª–∞–∂–Ω—è—é—â–∏–π –∫—Ä–µ–º –¥–ª—è –ª–∏—Ü–∞ —Å –≥–∏–∞–ª—É—Ä–æ–Ω–æ–≤–æ–π –∫–∏—Å–ª–æ—Ç–æ–π, –º–∏–Ω–∏–∞—Ç—é—Ä–∞, 2 –º–ª. <br><br>\n\n12. –ü–æ–ø–∞–¥–∞–µ—Ç—Å—è –æ–¥–∏–Ω –∏–∑ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –±—Ä–µ–Ω–¥–∞ ALFAPARF Milano Professional:<br>\n- Alfaparf Milano Professional, –º–∞—Å–∫–∞ –¥–ª—è —Å—É—Ö–∏—Ö –≤–æ–ª–æ—Å Semi Di Lino Moisture Nutritive Mask, —Ç—Ä–µ–≤–µ–ª-—Ñ–æ—Ä–º–∞—Ç, 50 –º–ª.<br> \n- Alfaparf Milano Professional, –º–∞—Å–∫–∞ –¥–ª—è –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–Ω—ã—Ö –≤–æ–ª–æ—Å Semi Di Lino Reconstruction Reparative Mask, —Ç—Ä–µ–≤–µ–ª-—Ñ–æ—Ä–º–∞—Ç, 50 –º–ª.<br><br> \n\n13. URIAGE, –Ω–æ—á–Ω–∞—è —É–≤–ª–∞–∂–Ω—è—é—â–∞—è –º–∞—Å–∫–∞, –º–∏–Ω–∏–∞—Ç—é—Ä–∞, 15 –º–ª. <br>\n14. Laboratorium, —Å—ã–≤–æ—Ä–æ—Ç–∫–∞ —Å –≤–∏—Ç–∞–º–∏–Ω–æ–º –°, –ø–æ–ª–Ω–æ—Ä–∞–∑–º–µ—Ä–Ω–∞—è, 50 –º–ª. <br>\n15. INSTITUT KARITE PARIS, –º–∞—Å–ª–æ —à–∏ 100%, –ø–æ–ª–Ω–æ—Ä–∞–∑–º–µ—Ä–Ω–æ–µ, 10 –º–ª. <br>\n16. Premium Jigott & La Miso, –∫—Ä–µ–º –¥–ª—è –Ω–æ–≥ —Å –º—É—Ü–∏–Ω–æ–º —É–ª–∏—Ç–∫–∏, –ø–æ–ª–Ω–æ—Ä–∞–∑–º–µ—Ä–Ω—ã–π, 100 –º–ª. <br>\n17. Cosworker, —Ç–∫–∞–Ω–µ–≤–∞—è –º–∞—Å–∫–∞ –¥–ª—è –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ–≥–æ —É–≤–ª–∞–∂–Ω–µ–Ω–∏—è –∫–æ–∂–∏, –ø–æ–ª–Ω–æ—Ä–∞–∑–º–µ—Ä–Ω–∞—è, 1 —à—Ç.<br>\n18. MegRhythm, –ø–∞—Ä–æ–≤–∞—è –º–∞—Å–∫–∞ –¥–ª—è –≥–ª–∞–∑ ¬´–õ–∞–≤–∞–Ω–¥–∞ ‚Äî —à–∞–ª—Ñ–µ–π¬ª, –ø–æ–ª–Ω–æ—Ä–∞–∑–º–µ—Ä–Ω–∞—è, 1 —à—Ç. <br>\n19. MISSHA, —Ç–æ–Ω–∞–ª—å–Ω—ã–π BB-–∫—Ä–µ–º ¬´–ò–¥–µ–∞–ª—å–Ω–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ¬ª SPF42/PA+++ –ú Perfect Cover BB Cream, —Ç–æ–Ω 23, —Å–∞—à–µ, 1 –º–ª.<br><br>\n\n–û–±—Ä–∞—â–∞–µ–º –≤–∞—à–µ –≤–Ω–∏–º–∞–Ω–∏–µ, –±–µ—Å–ø–ª–∞—Ç–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ –Ω–µ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è–µ—Ç—Å—è –Ω–∞ —Ç–æ–≤–∞—Ä—ã Flacon Magazine.'.replaceAll(
    '<br>',
    '',
  );

const baseMessageArgs: [string, TelegramBot.SendPhotoOptions] = [
  testProduct.imageUrls[0],
  {
    caption: [
      testProduct.name,
      testProduct.productType,
      testProduct.price.regular,
    ].join('\n'),
    parse_mode: 'MarkdownV2',
    disable_notification: false,
    reply_markup: {
      inline_keyboard: [
        [
          {
            text: '–û–ø–∏—Å–∞–Ω–∏–µ ‚ÑπÔ∏è',
            callback_data: 'info' + '_' + testProduct.itemId,
          },
          {
            text: '–ò—Å—Ç–æ—Ä–∏—è —Ü–µ–Ω',
            callback_data: 'priceHistory' + '_' + testProduct.itemId,
          },
          {
            text: '–§–æ—Ç–æ üñº',
            callback_data: 'photo' + '_' + testProduct.itemId,
          },
        ],
      ],
    },
  },
];
@Injectable()
export class TelegramBotService implements OnModuleInit {
  protected bot: TelegramBot;
  private readonly logger = new Logger('TelegramBotService');

  constructor(private readonly configService: ConfigService) {}

  onModuleInit() {
    this.initBot();
  }
  initBot() {
    const token = this.configService.get<string>('bot.token');

    this.bot = new TelegramBot(token, { polling: true });
    this.bot.on(
      'message',
      (message: TelegramBot.Message, metadata: TelegramBot.Metadata) => {
        this.logger.log(message);
        this.logger.log(metadata);

        this.bot.sendPhoto(message.chat.id, ...baseMessageArgs);
      },
    );
    this.bot.on(
      'callback_query',
      ({ data, message }: TelegramBot.CallbackQuery) => {
        const [type, id] = data.split('_');
        this.logger.log({ type, id });
        this.logger.log(message);

        if (type === 'info') {
          this.bot.sendMessage(message.chat.id, content, {
            parse_mode: 'Markdown',
          });
          return;
        }
        if (type === 'photo') {
          testProduct.imageUrls.forEach((img) => {
            this.bot.sendPhoto(message.chat.id, img);
          });
        }
      },
    );
  }
}
